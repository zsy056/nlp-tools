#!/usr/bin/env python
# Get sentences from text

import sys

senends = ['。', '！', '？', '…', '~', '～', '!', '?', '.', '．'] 
endfollow = ['\'', '"', '”', '’', '.']

# Remove spaces in text
def rm_space(text):
    ret_str = ''
    for char in text:
        if not char.isspace():
            ret_str += char
    return ret_str

# Remove meta data in <>
def rm_metadata(text):
    ret_str = ''
    in_meta = False
    for char in text:
        if not in_meta:
            if char == '<':
                in_meta = True
            else:
                ret_str += char
        else:
            if char == '>':
                in_meta = False

    return ret_str

# Segment sentences from text
def seg_sen(text):
    sen_lst = []
    buf_str = ''
    in_fo = False
    for char in text:
        if (not in_fo) and (char in senends):
            in_fo = True
            buf_str += char
            continue
        if in_fo:
            if (char in endfollow) or (char in senends):
                buf_str += char
            else:
                in_fo = False
                sen_lst.append(buf_str)
                buf_str = char
            continue
        buf_str += char
    # Collect the rest of text
    sen_lst.append(buf_str)

    return sen_lst

# Get text from file
def get_text(filepath, user_encoding):
    #return open(filepath, 'r', encoding=user_encoding).read()
    txt_buf = ''
    infile = open(filepath, 'r', encoding=user_encoding)
    while True:
        line = infile.readline()
        if line == '': break
        # Remove meta data
        if line[0] == '<': continue
        txt_buf += line
    return txt_buf
        

def main(argv):
    if len(argv) != 3:
        print('Usage:\nch-sen-seg filepath encoding', file=sys.stderr)
        exit(1)
    text = get_text(argv[1], argv[2]) 
    sen_lst = seg_sen(rm_metadata(rm_space(text)))
    
    for sen in sen_lst:
        print(sen)

if __name__ == '__main__':
    main(sys.argv)
